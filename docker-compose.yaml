version: '3.8'
services:
  qdrant:
    image: qdrant/qdrant
    ports:
      - "6333:6333"
    volumes:
      - ./qdrant_data:/qdrant/storage

  mysql:
    image: mysql:8
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: mlflow
      MYSQL_USER: mlflow
      MYSQL_PASSWORD: mlflow
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql

  minio:
    image: minio/minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data

  mlflow:
    build:
      context: ./mlflow-server
    environment:
      AWS_ACCESS_KEY_ID: q63Oq77uflrb5Q0VuBKJ
      AWS_SECRET_ACCESS_KEY: kV3UFQeqxV7kMMGPo5B8abdMopjPPE2cO6Ccc1B9
      MLFLOW_S3_ENDPOINT_URL: http://minio:9000
    ports:
      - "5000:5000"
    depends_on:
      - mysql
      - minio

  bentoml-model:
    build: ./bento-model-service
    ports:
      - "3000:3000"
    depends_on:
      - mlflow

  bentoml-embedding:
    build: ./bento-embedding-service
    ports:
      - "3001:3001"
    depends_on:
      - mlflow
  rag-orchestrator:
    build: ./rag-orchestrator
    ports:
      - "8000:8000"
    depends_on:
      - qdrant
    env_file:
      - ./rag-orchestrator/.env
  streamlit-app:
    build: ./streamlit-app
    ports:
      - "8501:8501"
    depends_on:
      - rag-orchestrator

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - rag-orchestrator

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "4000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    depends_on:
      - prometheus
  mongo:
    image: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_MONGODB_ENABLE_ADMIN: true
      ME_CONFIG_BASICAUTH: false
    depends_on:
      - mongo

volumes:
  mysql_data:
  minio_data:
  grafana_data:
  mongo_data:
